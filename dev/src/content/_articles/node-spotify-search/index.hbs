---
section: "Blog"
bodyclass: "page-blog"
post: true
layout: page.hbs

title: "Spotify Album Search"
pageid: "spotify-album-search"

intro: "Using Node.js, Express and the Spotify Web API to implement a server-side album search app."

posted: 2015-05-03
published: true

---

<section>

    <h1>Spotify Album Search</h1>
    <h2>Using Node.js, Express and the Spotify Web API</h2>

    <p>I recently completed the excellent <a href="http://www.teamtreehouse.com" rel="external">Treehouse</a> course on <a href="http://teamtreehouse.com/library/nodejs-basics">Node.js Basics</a> presented by my fellow Englishman in PDX Andrew ‘<a href="https://twitter.com/chalkers" rel="external">Chalkers</a>’ Chalkley.

    <p>The course runs through building a simple <a href="https://nodejs.org/" rel="external">Node.js</a> app that retrieves and displays user profile information from the Treehouse API.</p>

    <p>That’s fine for a start but I wanted to do something a little more challenging with the Spotify API. It’s based on Rest and returns JSON format objects about artists, albums and songs. I thought a nice starting point would be to implement a simple search. That would allow me to do a bit of routing, some data posting and handling of responses all with Node.</p>

    <p>Here’s what I threw together <a href="http://node-spotify-search.herokuapp.com" rel="external">http://node-spotify-search.herokuapp.com/</a></p>

    <div class="cta">
        <a href="http://node-spotify-search.herokuapp.com" rel="external">LIVE DEMO</a>
        <a href="https://github.com/rstphnsn/node-spotify-search" rel="external">Code on GitHub</a>
    </div>

</section>